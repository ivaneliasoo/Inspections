/* tslint:disable */
/* eslint-disable */
/**
 * Inspections API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DynamicFields,
    DynamicFieldsFromJSON,
    DynamicFieldsFromJSONTyped,
    DynamicFieldsToJSON,
} from './';

/**
 * 
 * @export
 * @interface FormDefinitionResponse
 */
export interface FormDefinitionResponse {
    /**
     * 
     * @type {number}
     * @memberof FormDefinitionResponse
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof FormDefinitionResponse
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FormDefinitionResponse
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FormDefinitionResponse
     */
    icon?: string | null;
    /**
     * 
     * @type {DynamicFields}
     * @memberof FormDefinitionResponse
     */
    fields?: DynamicFields;
    /**
     * 
     * @type {any}
     * @memberof FormDefinitionResponse
     */
    defaultValues?: any | null;
    /**
     * 
     * @type {boolean}
     * @memberof FormDefinitionResponse
     */
    enabled?: boolean;
    /**
     * 
     * @type {number}
     * @memberof FormDefinitionResponse
     */
    order?: number;
}

export function FormDefinitionResponseFromJSON(json: any): FormDefinitionResponse {
    return FormDefinitionResponseFromJSONTyped(json, false);
}

export function FormDefinitionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): FormDefinitionResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'icon': !exists(json, 'icon') ? undefined : json['icon'],
        'fields': !exists(json, 'fields') ? undefined : DynamicFieldsFromJSON(json['fields']),
        'defaultValues': !exists(json, 'defaultValues') ? undefined : json['defaultValues'],
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'order': !exists(json, 'order') ? undefined : json['order'],
    };
}

export function FormDefinitionResponseToJSON(value?: FormDefinitionResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'title': value.title,
        'icon': value.icon,
        'fields': DynamicFieldsToJSON(value.fields),
        'defaultValues': value.defaultValues,
        'enabled': value.enabled,
        'order': value.order,
    };
}


